{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red127\green127\blue127;\red148\green6\blue75;\red244\green246\blue249;
\red27\green31\blue34;\red38\green38\blue38;\red101\green71\blue146;\red14\green114\blue164;}
\paperw11900\paperh16840\margl1440\margr1440\vieww14340\viewh12700\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #170427\
un module de D3V4\

\b\fs34 D3 FORCE DOCUMENTATION
\b0\fs24 \
\'e0 partir de cette doc :\
\cf2 https://github.com/d3/d3-force/blob/master/README.md#forceCenter\cf0 \
\
Ce module simule les forces physiques sur les particules. Pour cela il impl\'e9mente un sch\'e9ma d\'92int\'e9gration de Verlet https://fr.wikipedia.org/wiki/Int\'e9gration_de_Verlet ( Loup Verlet 1967 ) dont 2 variables sont remplac\'e9es par des constantes ( l\'92incr\'e9ment temporel, et la masse de chaque particule ). En cons\'e9quence, une force agissant sur une particule est l\'92\'e9quivalent d\'92une acc\'e9l\'e9ration constante sur chaque incr\'e9ment temporel ( time step ) et peut \'eatre simul\'e9e simplement par ajout \'e0 la v\'e9locit\'e9 de la particule, qui s\'92ajoute ensuite \'e0 sa position\'85\
\
Les simulations physiques sont utiles pour \'e9tudier les r\'e9seaux et les hi\'e9rarchies. On peut aussi simuler des collisions par exemple pour faire un tableau de type \'ab\'a0nu\'e9e\'a0\'bb ( Beeswarm ). C\'92est aussi un moteur de rendu physique rudimentaire si on veut l\'92utiliser pour cet usage.\
\
Pour utiliser ce module, il faut cr\'e9er une simulation pour un tableau de n\'9cuds, et ensuite composer la force d\'e9sir\'e9e. Puis \'e9couter l\'92\'e9v\'e9nement TICK ( event listener \'e0 ajouter avec 
\i .on
\i0  ) pour rendre et mettre \'e0 jour les n\'9cuds  dans SVG ou Canvas.\
\pard\pardeftab720\partightenfactor0

\f1\fs27\fsmilli13600 \cf3 \cb4 \expnd0\expndtw0\kerning0
var\cf5  simulation \cf3 =\cf5  \cf6 d3\cf5 .\cf7 forceSimulation\cf5 (nodes);
\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \

\b forceSimulation :
\b0 \
\cf2 https://github.com/d3/d3-force/blob/master/README.md#forceSimulation\cf0 \
cr\'e9\'e9 une nouvelle simulation \'e0 partir d\'92un tableau de points, et sans forces par d\'e9faut, elle d\'e9marre automatiquement mais on peut l\'92arr\'eater et la relancer avec 
\i .stop
\i0  et 
\i .tick
\i0 .\

\i\b .tick
\i0\b0  incr\'e9mente l\'92Alpha actuel par 
\i ( alphaTarget - alpha ) x alphaDecay\

\i0 puis appelle chaque force enregistr\'e9e, lui passant la nouvelle valeur d\'92alpha, puis d\'e9cr\'e9mente la v\'e9locit\'e9 de chaque n\'9cud par 
\i velocity x velocityDecay
\i0 , puis incr\'e9mente la position de chaque n\'9cud par 
\i velocity
\i0 .\

\i\b alphaDecay
\i0\b0  indique \'e0 quelle vitesse alpha atteint 
\i\b alphaTarget
\i0\b0 \
sachant que par d\'e9faut alphaTarget est de 0, cela est en g\'e9n\'e9ral une indication de la vitesse \'e0 laquelle la simulation se fige.\
Pour cr\'e9er une simulation de force statique, il faut utiliser cette m\'e9thode en conjonction avec 
\i simulation.stop
\i0 .\
\

\b Les n\'9cuds pass\'e9s \'e0 la simulation :
\b0 \
\cf2 https://github.com/d3/d3-force/blob/master/README.md#simulation_nodes\cf0 \

\i simulation.nodes([nodes])
\i0  r\'e9attribue un tableau de n\'9cud \'e0 la simulation et r\'e9initialise les forces attach\'e9es aux n\'9cuds\
chaque n\'9cud doit \'eatre un objet et la simulation leur attribue les propri\'e9t\'e9s index, x, y, vx, vy ( v\'e9locit\'e9 ), et en option fx et fy pour les n\'9cuds immobiles ( fixes ). Par d\'e9faut la v\'e9locit\'e9 est 0,0; si x ou y est NaN l\'92arrangement par d\'e9faut est la phyllotaxie ( inspir\'e9e du v\'e9g\'e9tal ). \'c0 la fin de chaque Tick, un n\'9cud voit son x r\'e9initialis\'e9 \'e0 fx et son vx \'e0 0 ; idem pour y. Il faut supprimer fx et fy ou leur attribuer null pour que le n\'9cud arr\'eate d\'92\'eatre fixe.\
\

\b Trouver la n\'9cud le plus pr\'e8s d\'92une position :
\b0 \
\pard\pardeftab720\partightenfactor0
\cf2 https://github.com/d3/d3-force/blob/master/README.md#simulation_find\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b \cf0 Gestion des \'e9v\'e9nements :
\b0 \
\cf2 https://github.com/d3/d3-force/blob/master/README.md#simulation_on\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\

\b\fs28 \ul Forces
\b0\fs24 \ulnone \
\
Une force est une fonction qui modifie la position et la v\'e9locit\'e9 des n\'9cuds. Une force peut appliquer une force physique classique comme une charge \'e9lectrique ou une gravit\'e9, peut r\'e9soudre des contraintes g\'e9om\'e9triques comme garder des n\'9cuds \'e0 l\'92int\'e9rieur d\'92une bo\'eete ou garder des n\'9cuds li\'e9s \'e0 distance les uns des autres. Par exemple voici une force qui bouge les n\'9cuds en direction de l\'92origine (0,0) :\
\
\pard\pardeftab720\partightenfactor0

\f1\fs27\fsmilli13600 \cf3 \cb4 \expnd0\expndtw0\kerning0
function\cf5  \cf7 force\cf5 (\cf6 alpha\cf5 ) \{\
  \cf3 for\cf5  (\cf3 var\cf5  i \cf3 =\cf5  \cf8 0\cf5 , n \cf3 =\cf5  \cf6 nodes\cf5 .\cf8 length\cf5 , node, k \cf3 =\cf5  alpha \cf3 *\cf5  \cf8 0.1\cf5 ; i \cf3 <\cf5  n; \cf3 ++\cf5 i) \{\
    node \cf3 =\cf5  nodes[i];\
    \cf6 node\cf5 .\cf6 vx\cf5  \cf3 -=\cf5  \cf6 node\cf5 .\cf8 x\cf5  \cf3 *\cf5  k;\
    \cf6 node\cf5 .\cf6 vy\cf5  \cf3 -=\cf5  \cf6 node\cf5 .\cf8 y\cf5  \cf3 *\cf5  k;\
  \}\
\}\

\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\cf2 https://github.com/d3/d3-force/blob/master/README.md#_force\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b \cf0 Une force
\b0  va typiquement prendre la position du n\'9cud et lui ajouter la v\'e9locit\'e9. Le r\'f4le d\'92une simulation est de cr\'e9er des compositions de forces. En option on peut impl\'e9menter 
\i force.initialize
\i0  pour recevoir le tableau de n\'9cuds de la simulation.\

\i force()
\i0  s\'92applique au tableau pass\'e9 par 
\i force.initialize
\i0 \

\i forceLink()
\i0  s\'92applique \'e0 la source et la cible de chaque n\'9cud (il y a d\'92autres options).\
Le module D3 Force propose les simulations suivantes :\

\b Force centr\'e9e :
\b0 \
\cf2 https://github.com/d3/d3-force/blob/master/README.md#forceCenter\cf0 \

\b Collision :
\b0 \
\cf2 https://github.com/d3/d3-force/blob/master/README.md#forceCollide\cf0 \

\b Liens :
\b0 \
\cf2 https://github.com/d3/d3-force/blob/master/README.md#forceLink\cf0 \

\b Many-body / n-body :\

\b0 \cf2 https://github.com/d3/d3-force/blob/master/README.md#forceManyBody\cf0 \
Cette force s\'92applique mutuellement parmi les n\'9cuds, elle permet de simuler la gravit\'e9 si la force ( strength ) est positive, ou une charge \'e9lectrostatique ( la r\'e9pulsion ) si elle est n\'e9gative. M\'eame les n\'9cuds d\'e9connect\'e9s sont affect\'e9s par la force, contrairement au cas de la force 
\i liens (links)
\i0 .\

\b Positionnement :
\b0 \
\cf2 https://github.com/d3/d3-force/blob/master/README.md#forceX\cf0 \
Cette force pousse les n\'9cuds vers une certaine position, avec une force ( strength ) configurable. Ces forces peuvent s\'92appliquer \'e0 des n\'9cuds individuels mais sont plut\'f4t faites pour s\'92appliquer globalement.\
\
\
\
\
}